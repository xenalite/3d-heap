<project name="debugger" basedir="." default="main">

	<property name="src.dir" value="src/com" />
	<property name="build.dir" value="build" />
	<property name="classes.dir" value="${build.dir}/classes" />
	<property name="jar.dir" value="${build.dir}/jar" />
	<property name="main-class" value="com.heap3d.entry.SwingWrappedApplication" />
	<property name="lib.dir" value="lib" />
	<property name="src.unittests.dir" value="tests/unit" />
	<property name="src.systemtests.dir" value="tests/system" />
	<property name="reports.dir" value="reports" />
	<property name="systemreports.dir" value="systemreports" />

	<path id="junit.class.path">
		<fileset dir="${lib.dir}" includes="jar/*" />
		<pathelement location="${classes.dir}" />
	</path>

	<path id="classpath">
		<fileset dir="${lib.dir}" includes="jar/*" />
	</path>

	<target name="clean">
		<delete dir="${build.dir}" />
		<delete dir="${reports.dir}" />
	</target>

	<target name="compile">
		<mkdir dir="${classes.dir}" />
		<javac target="1.8" source="1.8" includeantruntime="false" srcdir="${src.dir}" destdir="${classes.dir}" classpathref="classpath" />
	</target>

	
	<target name="compileUnitTest" depends="compile">
		<javac target="1.8" source="1.8" includeantruntime="false" srcdir="src/${src.unittests.dir}" destdir="${classes.dir}">
			<classpath refid="junit.class.path" />
		</javac>
	</target>
	
	<target name="compileSystemTest" depends="compile">
		<javac target="1.8" source="1.8" includeantruntime="false" srcdir="src/${src.systemtests.dir}" destdir="${classes.dir}">
			<classpath refid="junit.class.path" />
		</javac>
	</target>
	
	<target name="jar" depends="compile">
		<mkdir dir="${jar.dir}" />
		<jar destfile="${jar.dir}/${ant.project.name}.jar" basedir="${classes.dir}">
			<manifest>
				<attribute name="Main-Class" value="${main-class}" />
			</manifest>
		</jar>
	</target>

	<target name="run" depends="jar">
		<java fork="true" classname="${main-class}">
			<!-- Different platforms -->
			<jvmarg value="-Djava.library.path=lib/native/lwjgl/linux" />
			<classpath>
				<path refid="classpath" />
				<path location="${jar.dir}/${ant.project.name}.jar" />
			</classpath>
		</java>
	</target>

	<target name="unittest" depends="compileUnitTest">
		<mkdir dir="${reports.dir}" />
		
		<junit printsummary="yes" fork="true" haltonfailure="no" failureproperty="test.failed">
			<formatter type="plain" usefile="false" />
			<!-- to screen -->
			<classpath refid="junit.class.path" />
			<classpath>
				<pathelement location="${classes.dir}" />
			</classpath>

			<formatter type="plain" />
			<formatter type="xml" />

			<batchtest todir="${reports.dir}">
				<fileset dir="src">
					<include name="${src.unittests.dir}/**/*.java" />
				</fileset>
			</batchtest>
		</junit>
		<junitreport todir="${reports.dir}">
			<fileset dir="${reports.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report todir="${reports.dir}" />
		</junitreport>
		<fail message="Test failure detected, check test results." if="test.failed" />
	</target>

	<target name="systemtest" depends="compileSystemTest">
		<mkdir dir="${systemreports.dir}" />
		
		<junit printsummary="yes" fork="true" haltonfailure="no" failureproperty="test.failed">
			<formatter type="plain" usefile="false" />
			<!-- to screen -->
			<classpath refid="junit.class.path" />
			<jvmarg value="-Djava.library.path=lib/native/lwjgl/linux" />
			<classpath>
				<pathelement location="${classes.dir}" />
			</classpath>

			<formatter type="plain" />
			<formatter type="xml" />

			<batchtest todir="${systemreports.dir}">
				<fileset dir="src">
					<include name="${src.systemtests.dir}/snapshotTest/ScreenshotSystemTest.java" />
				</fileset>
			</batchtest>
		</junit>
		<junitreport todir="${systemreports.dir}">
			<fileset dir="${systemreports.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report todir="${systemreports.dir}" />
		</junitreport>
		<fail message="Test failure detected, check test results." if="test.failed" />
	</target>
	
	<target name="clean-build" depends="clean,jar" />

	<target name="main" depends="clean,run" />

</project>
